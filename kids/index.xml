<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kids on Kwazii.top</title>
    <link>https://kwazii.top/kids/</link>
    <description>Recent content in Kids on Kwazii.top</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Jun 2022 18:29:26 +0800</lastBuildDate><atom:link href="https://kwazii.top/kids/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>第一章 第3课 运算符</title>
      <link>https://kwazii.top/kids/python/chapter-3/</link>
      <pubDate>Wed, 01 Jun 2022 18:29:26 +0800</pubDate>
      
      <guid>https://kwazii.top/kids/python/chapter-3/</guid>
      <description>本节目标 算数运算符 与数学运算符的比较
   名称 数学 Python 作用     加 + + 把两个对象相加，或拼接字符串   减 - - 把两个对象相减   乘 X * 把两个数相乘，或是放回一个被重复若干次的字符串   除 ➗ / 把两个对象相除，商是小数（能整除也保留一位小数）   取整除  // 取两个数相除的商（整数部分）   取模  % 取两个数相除的余数   幂  ** 取x的n次方    重点：
  其中的加和乘可用于字符串类型的运算
  取整除（//）是向下取整，不是四舍五入, 例如24//5的结果是4，而不是5
  取模（%）如果能整除，则取模的结果为0
  赋值运算符    运算符 描述 例子 作用     = 赋值运算符 a = 5 把5赋值给变量a   += 加法赋值运算符 a += b 相当于a = a + b   -= 减法赋值运算符 a -= b 相当于a = a - b   *= 乘法赋值运算符 a *= b 相当于a = a * b   /= 除法赋值运算符 a /= b 相当于a = a / b   %= 取模赋值运算符 a %= b 相当于a = a % b   **= 幂赋值运算符 a **= b 相当于a = a ** b   //= 取整除赋值运算符 a //= b 相当于a = a // b    除了 = 运算符，剩余的运算符都是相应的简写模式</description>
    </item>
    
    <item>
      <title>第一章 第2课 编程基础</title>
      <link>https://kwazii.top/kids/python/chapter-2/</link>
      <pubDate>Wed, 01 Jun 2022 01:25:57 +0800</pubDate>
      
      <guid>https://kwazii.top/kids/python/chapter-2/</guid>
      <description>本节目标 print()函数   作用：打印输出，在屏幕上显示出要打印的信息
  用法
 打印字符串  &amp;gt;&amp;gt;&amp;gt;print(&amp;#34;hello&amp;#34;) hello  打印数字  &amp;gt;&amp;gt;&amp;gt;print(4+6) 10  打印变量  &amp;gt;&amp;gt;&amp;gt;coding = &amp;#34;Python3&amp;#34; &amp;gt;&amp;gt;&amp;gt;print(coding) Python3  输出多个内容  &amp;gt;&amp;gt;&amp;gt;a = &amp;#34;hello&amp;#34; &amp;gt;&amp;gt;&amp;gt;b = &amp;#34;world&amp;#34; &amp;gt;&amp;gt;&amp;gt;print(a, b) # 注意单词之间有空格 hello world  换行  &amp;gt;&amp;gt;&amp;gt;print(&amp;#34;你好&amp;#34;, end =&amp;#34;,&amp;#34;) &amp;gt;&amp;gt;&amp;gt;print(&amp;#34;kwazii&amp;#34;) # 运行结果 你好,kwazii  多行输出  &amp;gt;&amp;gt;&amp;gt;print(&amp;#39;&amp;#39;&amp;#39; 第一行 第二行 第三行 &amp;#39;&amp;#39;&amp;#39;) 第一行 第二行 第三行  转义符  &amp;gt;&amp;gt;&amp;gt;print(&amp;#39;I\&amp;#39;m Kwazii&amp;#39;) I&amp;#39;m Kwazii   关于引号，单引号和双引号，三引号   所有引号必须是英文半角引号</description>
    </item>
    
    <item>
      <title>第一章 第1课 编程环境搭建</title>
      <link>https://kwazii.top/kids/python/chapter-1/</link>
      <pubDate>Tue, 31 May 2022 14:18:57 +0800</pubDate>
      
      <guid>https://kwazii.top/kids/python/chapter-1/</guid>
      <description>课前准备 搭建Python编程环境   下载Python 在电脑浏览器中打开Python官网https://www.python.org/
点击下图中红框中按钮即可现在最新的python安装包 (由于使用的操作系统不同，页面显示可能不完全一致，Python的版本也可能和图中不一致，此课程当前使用的版本为3.10.4，但不影响此课程学习。)
  安装Python
双击刚才下载的安装包进行安装，如图所示
打开安装包后会看到此窗口，注意先勾选下方红框Add Python 3.10 to PATH，然后点击上方红框Install Now进行安装
耐心等待，看到如下图的提示说明安装完成，点击close关闭即可
  打开并检查Python是否安装成功
完成上述步骤之后，在键盘上按win+r键打开运行，输入cmd，点击确定，如下图所示
将会打开命令行窗口，输入python回车，如果看到如下图显示则说明pyhton已安装成功
接下来我们找到启动python的入口
以windows系统为例，点击桌面左下方开始图标，在其中找到Python文件夹，点击其中IDLE，你将会看到Python IDLE窗口，如下图
到此Python编程环境的安装就已经全部完成了，再次说明由于操作系统或安装日期的不同，所显示的内容可能不完全和以上图中一致。但只要流程相同均不影响此课程的学习。
（因考虑普遍需求，以上操作均已windows操作系统为例。之后本课程的演示均为MacOS系统，如无特殊说明操作流程一致。）
如安装遇到问题，可以联系我。
下面我们正式开始Python课程的学习。祝你好运！
  本节目标 了解Python的集成开发环境（IDE）   什么是集成开发环境
集成开发环境简称IDE（Integrated Development Environment），是用于提供程序开发环境的应用程序，一般包括代码编辑器、编译器、调试器和图形用户界面等工具。集成了代码编写功能、分析功能、编译功能、调试功能等一体化的开发软件服务套件。在我们课前准备中，我们已经完成了Python的安装。Python安装之后会自带一个名为IDLE的集成开发环境。
  Python可用的IDE有那些
除了Python自带的IDLE之外，常用的IDE和编辑器还有很多。例如VSCode，pycharm， Jupyter Notebook等等。初学者不必纠结使用何种工具，专注于代码本身更为重要。
  掌握IDLE的两种模式   IDLE的两种模式
为了简化开发的复杂性，初学者不必纠结使用的工具。因此对于我们初学者来说使用Python自带的IDLE足以完成我们的学习。
使用IDLE进行Python开发，首先我们要了解的是IDLE的两种模式。即脚本模式（又称为编辑器模式）和交互模式（又称为Shell模式）
这两种模式的界面如下图, 左边👈为脚本模式，右边👉为交互模式
  IDLE两种模式的切换方法
切换方法：新建文件即可。
交互模式的提示符是 &amp;gt; &amp;gt; &amp;gt;，脚本模式没有提示符。
  IDLE的基本操作和常用快捷键
 新建文件 打开文件 保存文件 运行（脚本） 替换 退出交互模式 &amp;hellip;  基本的操作是我们每天的编程中最常用的功能，熟练掌握他们的快捷键可以大大提高我们的效率。（注意不同操作系统快捷键不尽相同）</description>
    </item>
    
  </channel>
</rss>
